{"version":3,"sources":["webpack:///src/app/pages/outbound/sales-order/add-sales-order/add-sales-order.component.html","webpack:///src/app/pages/outbound/sales-order/add-sales-order/add-sales-order.component.ts","webpack:///src/app/pages/outbound/sales-order/add-sales-order/add-sales-order.module.ts"],"names":["AddSalesOrderComponent","router","activatedRoute","fb","salesOrderService","paginationService","commonService","dataservice","PageTitle","exampleOptions","defaultDate","Date","dateFormat","supplierListArray","countryListArray","objectArray","clientListArray","loadingState","showLoader","formErrors","apierror","order_no","isEditing","editId","orderId","currentPage","snapshot","paramMap","get","addForm","group","sales_order_no","compose","required","sales_order_date","supplier_id","client_id","notes","address","country_name","country_id","state","city","street_address","currentCompany","subscribe","response","patchValue","getMasterData","getCountryList","getEditObject","getOrderProductList","data","label","res","success","country_list","getSalesOrderMasterData","supplier","client","params","sales_order_id","getSalesOrderProductList","list","pagination","getPager","error","getSalesOrderById","orderDate","navigateByUrl","page","index","push","formData","valid","FormData","append","value","changedateFormate","JSON","stringify","editSalesOrder","length","EditobjectArray","filter","item","sales_order_detail_id","addSalesOrderProduct","addSalesOrder","setTimeout","productAdd","addObject","id","editObject","object","swal","fire","title","delete_header_text","text","delete_smalll_text","icon","delete_dialogue_type","showCancelButton","confirmButtonText","delete_confirm_button","cancelButtonText","delete_cancel_button","then","result","deleteSalesOrderProduct","splice","catch","noop","static","selector","template","routes","path","component","AddSalesOrderModule","declarations","imports","forChild","providers"],"mappings":"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","file":"add-sales-order-add-sales-order-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.order_no}\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Order No. <em>*</em></label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input [formControl]=\\\"addForm.controls['sales_order_no']\\\" (change)=\\\"removeError()\\\" type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n                <span *ngIf=\\\"formErrors.order_no\\\" class=\\\"help-block\\\" [innerHTML]=\\\"formErrors.order_no\\\"></span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Order Date <em>*</em></label>\\r\\n              <div class=\\\"date-picker\\\">\\r\\n                <ng2-flatpickr [setDate]=\\\"orderDate\\\" [formControl]=\\\"addForm.controls['sales_order_date']\\\"\\r\\n                  [config]=\\\"exampleOptions\\\">\\r\\n                </ng2-flatpickr>\\r\\n                <span class=\\\"date-picker-icon\\\">\\r\\n                  <span class=\\\"fa fa-calendar\\\"></span>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Client <em>*</em></label>\\r\\n              <ng-select [formControl]=\\\"addForm.controls['client_id']\\\" [items]=\\\"clientListArray\\\" bindLabel=\\\"label\\\"\\r\\n                bindValue=\\\"value\\\" placeholder=\\\"Select Client\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Supplier <em>*</em></label>\\r\\n              <ng-select [formControl]=\\\"addForm.controls['supplier_id']\\\" [items]=\\\"supplierListArray\\\" bindLabel=\\\"label\\\"\\r\\n                bindValue=\\\"value\\\" placeholder=\\\"Select Supplier\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Deliver Address <em>*</em></label>\\r\\n              <textarea [formControl]=\\\"addForm.controls['deliver_address']\\\" class=\\\"form-control\\\" rows=\\\"2\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>-->\\r\\n\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Country <em>*</em></label>\\r\\n              <div class=\\\"\\\">\\r\\n                <ng-select [formControl]=\\\"addForm.controls['country_id']\\\" (change)=\\\"getCountryName($event)\\\"\\r\\n                  [items]=\\\"countryListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Country\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">State <em>*</em></label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input [formControl]=\\\"addForm.controls['state']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">City <em>*</em></label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input [formControl]=\\\"addForm.controls['city']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Street Address <em>*</em></label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input [formControl]=\\\"addForm.controls['street_address']\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-7 d-flex align-items-center\\\">\\r\\n            <h5>Product</h5>\\r\\n          </div>\\r\\n          <div class=\\\"col-5 text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addform()\\\">\\r\\n              <i class=\\\"la la-plus\\\"></i>\\r\\n              Add Product\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-3\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"table-responsive-md\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>No.</th>\\r\\n                    <th>Product</th>\\r\\n                    <th>Sku No</th>\\r\\n                    <th>Order Quantity</th>\\r\\n                    <th>Price</th>\\r\\n                    <th>Total Price</th>\\r\\n                    <th class=\\\"text-right\\\" width=\\\"80\\\">Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of objectArray; let i=index\\\">\\r\\n                    <td>{{i+1}}</td>\\r\\n                    <td>{{item?.product_name}}</td>\\r\\n                    <td>{{item?.sku_no}}</td>\\r\\n                    <td>{{item?.qty}}</td>\\r\\n                    <td>{{item?.price}}</td>\\r\\n                    <td>{{currentCompany?.currency?.label }} {{(item?.qty) * (item?.price) | number}}</td>\\r\\n                    <td>\\r\\n                      <div class=\\\"action-drop dropdown text-right\\\">\\r\\n                        <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" class=\\\"btn shadow-none btn-default btn-sm btn-icon-only\\\"\\r\\n                          title=\\\"\\\">\\r\\n                          <i class=\\\"fa fa-ellipsis-h\\\"></i>\\r\\n                        </a>\\r\\n                        <div class=\\\"dropdown-menu dropdown-icon-menu drop-menu-right\\\" style=\\\"width: 100px;\\\">\\r\\n                          <a *ngIf=\\\"isEditing\\\" class=\\\"dropdown-item\\\" (click)=\\\"editform(item?.po_detail_id,i,item)\\\"><i\\r\\n                              class=\\\"fa fa-edit fa-fw text-primary\\\">\\r\\n                            </i> Edit</a>\\r\\n                          <a class=\\\"dropdown-item\\\" (click)=\\\"deleteObject(item,i)\\\">\\r\\n                            <i class=\\\"fa fa-trash fa-fw text-primary\\\"></i>\\r\\n                            Delete\\r\\n                          </a>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr *ngIf=\\\"!loadingState && objectArray.length === 0\\\">\\r\\n                    <td colspan=\\\"7\\\">No records found</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <pagination [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\" (onPageChange)=\\\"getPage($event)\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label text-md-right\\\">Notes</label>\\r\\n              <textarea [formControl]=\\\"addForm.controls['notes']\\\" class=\\\"form-control\\\" rows=\\\"2\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/outbound/sales-order\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<app-add-product (onRelodeEvent)=\\\"onRelodeEvent($event)\\\" [ProductList]=\\\"objectArray\\\"\\r\\n  [orderNo]=\\\"addForm.value.sales_order_no\\\" (onProductSubmit)=\\\"onProductSubmit($event)\\\"></app-add-product>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FlatpickrOptions } from 'ng2-flatpickr';\r\nimport { CommonFunction } from 'src/app/common';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { errorMessage, DATEFORMAT } from 'src/app/messages';\r\nimport { AddProductComponent } from 'src/app/common-module/add-product/add-product.component';\r\nimport { SalesOrderService } from 'src/app/service/sales-order.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  selector: 'app-add-sales-order',\r\n  templateUrl: './add-sales-order.component.html'\r\n})\r\nexport class AddSalesOrderComponent implements OnInit {\r\n\r\n  @ViewChild(AddProductComponent, { static: false }) productAdd;\r\n  PageTitle = \"Sales Order\";\r\n  exampleOptions: FlatpickrOptions = {\r\n    defaultDate: new Date(),\r\n    dateFormat\t:DATEFORMAT\r\n    //enableTime: true\r\n  };\r\n\r\n  supplierListArray: Array<any> = [];\r\n  countryListArray: any = [];\r\n  objectArray: any = [];\r\n  clientListArray: Array<any> = [];\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  formErrors = {\r\n    apierror: null,\r\n    order_no: null\r\n  };\r\n  isEditing = false;\r\n  editId = null;\r\n  orderId: any = false;\r\n  pagination: any;\r\n  currentPage: number = 1;\r\n  orderDate: any;\r\n  currentCompany: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private salesOrderService: SalesOrderService,\r\n    private paginationService: PaginationService,\r\n    private commonService: CommonService,\r\n    private dataservice:DataService\r\n  ) {\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      this.isEditing = true;\r\n      this.editId = this.activatedRoute.snapshot.paramMap.get('id');\r\n    }\r\n\r\n\r\n    this.addForm = this.fb.group({\r\n      sales_order_no: [null, Validators.compose([Validators.required])],\r\n      sales_order_date: [null, Validators.compose([Validators.required])],\r\n      supplier_id: [null, Validators.compose([Validators.required])],\r\n      client_id: [null, Validators.compose([Validators.required])],\r\n      notes: [null],\r\n      address: [null],\r\n      country_name: [null],\r\n      country_id: [null, Validators.compose([Validators.required])],\r\n      state: [null, Validators.compose([Validators.required])],\r\n      city: [null, Validators.compose([Validators.required])],\r\n      street_address: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataservice.currentCompany.subscribe((response)=>{\r\n      this.currentCompany=response;\r\n  });\r\n    this.addForm.patchValue({ sales_order_date: new Date() });\r\n    this.getMasterData();\r\n    this.getCountryList();\r\n    if (this.isEditing) {\r\n      this.getEditObject();\r\n      this.getOrderProductList();\r\n    }\r\n  }\r\n\r\n  getCountryName(data) {\r\n    this.addForm.patchValue({ country_name: data.label });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.commonService.getCountryList().subscribe((res: any) => {\r\n      if (res.success) {\r\n        this.countryListArray = res.data.country_list;\r\n      }\r\n    });\r\n  }\r\n  getMasterData() {\r\n    this.salesOrderService.getSalesOrderMasterData().subscribe((response) => {\r\n      if (response.success) {\r\n        this.supplierListArray = response.data.supplier;\r\n        this.clientListArray = response.data.client;\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderProductList() {\r\n    const params: any = { sales_order_id: this.editId };\r\n    this.salesOrderService.getSalesOrderProductList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response.success && response.data) {\r\n        this.objectArray = response.data.list;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n\r\n    });\r\n  }\r\n\r\n  getEditObject() {\r\n    this.salesOrderService.getSalesOrderById(this.editId).subscribe((response) => {\r\n      if (response.success) {\r\n        this.orderDate = response.data.sales_order_date;\r\n        this.addForm.patchValue({\r\n          sales_order_no: response.data.sales_order_no,\r\n          supplier_id: response.data.supplier_id,\r\n          client_id: response.data.client_id,\r\n          sales_order_date: response.data.sales_order_date,\r\n          notes: response.data.notes ? response.data.notes : '',\r\n          country_name: response.data.address.country_name,\r\n          country_id: response.data.address.country_id,\r\n          state: response.data.address.state,\r\n          city: response.data.address.city,\r\n          street_address: response.data.address.street_address ? response.data.address.street_address : ''\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl('/outbound/sales-order');\r\n      }\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    this.currentPage = 1;\r\n    this.getOrderProductList();\r\n  }\r\n\r\n  onProductSubmit(data) {\r\n    if (data) {\r\n      if (data.index) {\r\n        this.objectArray[data.index] = data;\r\n      } else {\r\n        this.objectArray.push(data);\r\n      }\r\n    }\r\n\r\n  }\r\n  submitForm(formData: any): void {\r\n    if (formData.valid) {\r\n      this.showLoader = true;\r\n      const data = new FormData();\r\n      data.append('sales_order_no', formData.value.sales_order_no);\r\n      data.append('sales_order_date', CommonFunction.changedateFormate(formData.value.sales_order_date[0]));\r\n      data.append('supplier_id', formData.value.supplier_id);\r\n      data.append('client_id', formData.value.client_id);\r\n      data.append('notes', formData.value.notes ? formData.value.notes : '');\r\n      let address = {\r\n        country_id: formData.value.country_id,\r\n        country_name: formData.value.country_name,\r\n        state: formData.value.state,\r\n        city: formData.value.city,\r\n        street_address: formData.value.street_address\r\n      }\r\n      data.append('address', JSON.stringify(address));\r\n      if (this.isEditing) {\r\n        this.salesOrderService.editSalesOrder(this.editId, data).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            if (this.objectArray && this.objectArray.length > 0) {\r\n              let EditobjectArray = [];\r\n              this.objectArray.filter((item) => {\r\n                if (!item.sales_order_detail_id) { EditobjectArray.push(item); }\r\n              });\r\n              EditobjectArray.filter((item) => {\r\n                item.sales_order_id = this.editId;\r\n              });\r\n              this.salesOrderService.addSalesOrderProduct(EditobjectArray).subscribe((res) => {\r\n                this.showLoader = false;\r\n                if (res.success) {\r\n                }\r\n              }, (error) => {\r\n                this.showLoader = false;\r\n              });\r\n            }\r\n            this.router.navigateByUrl('/outbound/sales-order');\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      } else {\r\n        this.salesOrderService.addSalesOrder(data).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            let sales_order_id = response.data.sales_order_id;\r\n            if (this.objectArray && this.objectArray.length > 0) {\r\n              this.objectArray.filter((item) => {\r\n                item.sales_order_id = sales_order_id;\r\n              });\r\n              this.salesOrderService.addSalesOrderProduct(this.objectArray).subscribe((res) => {\r\n                this.showLoader = false;\r\n                if (res.success) {\r\n                }\r\n              }, (error) => {\r\n                this.showLoader = false;\r\n              });\r\n            }\r\n            this.router.navigateByUrl('/outbound/sales-order');\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  addform() {\r\n    if (this.addForm.value.sales_order_no) {\r\n      setTimeout(() => {\r\n        this.productAdd.addObject();\r\n      }, 200);\r\n    } else {\r\n      this.formErrors.order_no = \"* Plese Enter Order Number\";\r\n    }\r\n  }\r\n\r\n  editform(id, index, data) {\r\n    setTimeout(() => {\r\n      this.productAdd.editObject(id, index, data, this.editId, this.addForm.value.sales_order_no);\r\n    }, 200);\r\n  }\r\n\r\n  onRelodeEvent(value) {\r\n    if (value) {\r\n      this.getOrderProductList();\r\n      this.addForm.patchValue({ sales_order_date: new Date() });\r\n    }\r\n  }\r\n\r\n  deleteObject(object, index) {\r\n    swal.fire({\r\n      title: errorMessage.delete_header_text,\r\n      text: errorMessage.delete_smalll_text,\r\n      icon: errorMessage.delete_dialogue_type,\r\n      showCancelButton: true,\r\n      confirmButtonText: errorMessage.delete_confirm_button,\r\n      cancelButtonText: errorMessage.delete_cancel_button,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (object.sales_order_detail_id) {\r\n          this.salesOrderService.deleteSalesOrderProduct(object.sales_order_detail_id).subscribe(\r\n            (response) => {\r\n              if (response.success) {\r\n                this.getOrderProductList();\r\n              }\r\n            },\r\n          );\r\n        } else {\r\n          this.objectArray.splice(index, 1);\r\n        }\r\n      }\r\n    }).catch(swal.noop);\r\n  }\r\n\r\n  removeError() {\r\n    if (this.addForm.value.sales_order_no) {\r\n      this.formErrors.order_no = null;\r\n    }\r\n  }\r\n  ngAfterViewChecked(): void {\r\n    // this.orderDate = new Date();\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { PaginationModule } from 'src/app/common-module/pagination/pagination.module';\r\nimport { AddProductModule } from 'src/app/common-module/add-product/add-product.module';\r\nimport { AddSalesOrderComponent } from './add-sales-order.component';\r\nimport { SalesOrderService } from 'src/app/service/sales-order.service';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AddSalesOrderComponent\r\n}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [AddSalesOrderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AddProductModule,\r\n    Ng2FlatpickrModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgSelectModule,\r\n    PaginationModule,\r\n    FormValidationModule,\r\n  ], providers: [SalesOrderService]\r\n})\r\nexport class AddSalesOrderModule { }\r\n"]}
{"version":3,"sources":["webpack:///src/app/pages/inbound/registeration/add-configuration/add-configuration.component.html","webpack:///src/app/shared/form-validation/control-error/control-error.component.html","webpack:///src/app/pages/inbound/registeration/add-configuration/add-configuration.component.ts","webpack:///src/app/pages/inbound/registeration/add-configuration/add-configuration.module.ts","webpack:///src/app/shared/form-validation/control-error/control-error.component.ts","webpack:///src/app/shared/form-validation/directive/control-error-container.directive.ts","webpack:///src/app/shared/form-validation/directive/control-errors.directive.ts","webpack:///src/app/shared/form-validation/directive/form-submit.directive.ts","webpack:///src/app/shared/form-validation/form-errors.ts","webpack:///src/app/shared/form-validation/form-validation.module.ts"],"names":["AddConfigurationComponent","router","activatedRoute","fb","location","dataService","productRegistrationService","PageTitle","loadingState","productListArray","orderListArray","showLoader","formErrors","apierror","qty","isEditing","editId","OrderId_show","isSerialShow","registrationTypeArray","serialArray","formtype","addForm","group","order_id","compose","required","maintain_serial_no","product_id","registration_type","addWithForm","barcode","serial_no","tag_id","sku_no","unload_id","unload_detail_id","received_qty","addWithOutForm","addBulkForm","snapshot","paramMap","get","id","path","OrderId","patchValue","getOrderDetails","getEditObject","getMasterData","event","params","value","is_editing","subscribe","response","success","data","order","product","serial","getProductConfigurationById","unload_detail","console","log","productText","label","Number","r_qty","controls","setErrors","formData","valid","FormData","append","editProductConfiguration","next","error","addProductConfiguration","back","registrationTypeText","maintainSerialNoText","setValidators","updateValueAndValidity","clearValidators","subscription","OrderDetails","unsubscribe","editProductRegistration","addProductRegistration","selector","template","routes","component","AddConfigurationModule","declarations","imports","forChild","providers","ControlErrorComponent","cdr","_hide","_text","detectChanges","changeDetection","OnPush","ControlErrorContainerDirective","vcr","ControlErrorsDirective","resolver","controlErrorContainer","form","controlDir","customErrors","container","submit$","control","valueChanges","v","controlErrors","errors","control_name","getFormControlName","firstKey","Object","keys","messages","undefined","setError","ref","c","formGroup","parent","find","name","text","factory","resolveComponentFactory","createComponent","instance","FormSubmitDirective","host","element","pipe","classList","contains","add","nativeElement","VALIDATION_MESSAGES","first_name","last_name","email","validateEmail","phone_number","minlength","maxlength","password","pattern","confirm_password","validatePassword","login_pin","number_tag_to_create","max","min","FormValidationModule","exports","entryComponents"],"mappings":"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","file":"add-configuration-add-configuration-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"page-header border-b\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n\\n    <ng-container *ngIf=\\\"formtype==1\\\">\\n      <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n              <div class=\\\"col-md-5\\\">\\n\\n                <ng-container *ngIf=\\\"OrderId_show; then thenTemplate; else elseTemplate\\\"></ng-container>\\n                <ng-template #thenTemplate>\\n                  <ng-select [formControl]=\\\"addForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Order\\\">\\n                  </ng-select>\\n                </ng-template>\\n                <ng-template #elseTemplate>\\n                  <select disabled class=\\\"form-control\\\">\\n                    <option default selected=\\\"true\\\" disabled hidden value=\\\"OrderDetails?.po_no\\\">{{OrderDetails?.po_no}}\\n                    </option>\\n                  </select>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <ng-select [formControl]=\\\"addForm.controls['product_id']\\\"  (change)=\\\"setProductDetail($event)\\\" [items]=\\\"productListArray\\\" bindLabel=\\\"label\\\"\\n                  bindValue=\\\"value\\\" placeholder=\\\"Select Product\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <ng-select [formControl]=\\\"addForm.controls['registration_type']\\\" [items]=\\\"registrationTypeArray\\\"\\n                  bindLabel=\\\"label\\\" bindValue=\\\"value\\\" (change)=\\\"typeChange()\\\" placeholder=\\\"Select Registration\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"isSerialShow\\\" class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Serial Number <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <ng-select [formControl]=\\\"addForm.controls['maintain_serial_no']\\\" [items]=\\\"serialArray\\\"\\n                  bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Serial\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n        </div>\\n      </form>\\n    </ng-container>\\n\\n\\n    <ng-container *ngIf=\\\"formtype==2\\\">\\n\\n      <form [formGroup]=\\\"addWithForm\\\" (ngSubmit)=\\\"submitPForm(addWithForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n              <div class=\\\"col-md-5\\\">\\n  \\n                <ng-container *ngIf=\\\"OrderId_show; then thenTemplate; else elseTemplate\\\"></ng-container>\\n                <ng-template #thenTemplate>\\n                  <ng-select [formControl]=\\\"addWithForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Order\\\">\\n                  </ng-select>\\n                </ng-template>\\n                <ng-template #elseTemplate>\\n                  <select disabled class=\\\"form-control\\\">\\n                    <option default selected=\\\"true\\\" disabled hidden value=\\\"OrderDetails?.po_no\\\">{{OrderDetails?.po_no}}\\n                    </option>\\n                  </select>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"productText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"registrationTypeText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>\\n            <div  class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Serial Number <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">               \\n                <input [formControl]=\\\"addWithForm.controls['serial_no']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Bar Code <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [formControl]=\\\"addWithForm.controls['barcode']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Tag ID <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [formControl]=\\\"addWithForm.controls['tag_id']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>           \\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Qunatity <em>*</em></label>\\n              <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.qty}\\\">\\n                <input number [formControl]=\\\"addWithForm.controls['qty']\\\" readonly type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n              <span *ngIf=\\\"formErrors.qty\\\" class=\\\"help-block\\\"\\n              [innerHTML]=\\\"formErrors.qty\\\"></span>\\n            </div>           \\n          </div>\\n        </div>\\n        <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n        </div>\\n      </form>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"formtype==3\\\">\\n      <form [formGroup]=\\\"addWithOutForm\\\" (ngSubmit)=\\\"submitPForm(addWithOutForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n              <div class=\\\"col-md-5\\\">\\n  \\n                <ng-container *ngIf=\\\"OrderId_show; then thenTemplate; else elseTemplate\\\"></ng-container>\\n                <ng-template #thenTemplate>\\n                  <ng-select [formControl]=\\\"addWithOutForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Order\\\">\\n                  </ng-select>\\n                </ng-template>\\n                <ng-template #elseTemplate>\\n                  <select disabled class=\\\"form-control\\\">\\n                    <option default selected=\\\"true\\\" disabled hidden value=\\\"OrderDetails?.po_no\\\">{{OrderDetails?.po_no}}\\n                    </option>\\n                  </select>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"productText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"registrationTypeText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>            \\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Bar Code <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [formControl]=\\\"addWithOutForm.controls['barcode']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Tag ID <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [formControl]=\\\"addWithOutForm.controls['tag_id']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Qunatity <em>*</em></label>\\n              <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.qty}\\\">\\n                <input number readonly [formControl]=\\\"addWithOutForm.controls['qty']\\\"  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n              <span *ngIf=\\\"formErrors.qty\\\" class=\\\"help-block\\\"\\n              [innerHTML]=\\\"formErrors.qty\\\"></span>\\n            </div>            \\n          </div>\\n        </div>\\n        <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n        </div>\\n      </form>\\n    </ng-container>\\n\\n\\n    <ng-container *ngIf=\\\"formtype==4\\\">\\n      <form [formGroup]=\\\"addBulkForm\\\" (ngSubmit)=\\\"submitPForm(addBulkForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\n              <div class=\\\"col-md-5\\\">\\n  \\n                <ng-container *ngIf=\\\"OrderId_show; then thenTemplate; else elseTemplate\\\"></ng-container>\\n                <ng-template #thenTemplate>\\n                  <ng-select [formControl]=\\\"addBulkForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\n                    [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Order\\\">\\n                  </ng-select>\\n                </ng-template>\\n                <ng-template #elseTemplate>\\n                  <select disabled class=\\\"form-control\\\">\\n                    <option default selected=\\\"true\\\" disabled hidden value=\\\"OrderDetails?.po_no\\\">{{OrderDetails?.po_no}}\\n                    </option>\\n                  </select>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"productText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Registration Type <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [value]=\\\"registrationTypeText\\\" type=\\\"text\\\" class=\\\"form-control\\\"  readonly >\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Tag ID <em>*</em></label>\\n              <div class=\\\"col-md-5\\\">\\n                <input [formControl]=\\\"addBulkForm.controls['tag_id']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Received Qunatity </label>\\n              <div class=\\\"col-md-5\\\">\\n                <input number [formControl]=\\\"addBulkForm.controls['received_qty']\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly placeholder=\\\"\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Qunatity <em>*</em></label>\\n              <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.qty}\\\">\\n                <input number [formControl]=\\\"addBulkForm.controls['qty']\\\" (input)=\\\"qunatitycheck()\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n              </div>\\n              <span *ngIf=\\\"formErrors.qty\\\" class=\\\"help-block\\\"\\n              [innerHTML]=\\\"formErrors.qty\\\"></span>\\n            </div>\\n            \\n          </div>\\n        </div>\\n        <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\n        </div>\\n      </form>\\n    </ng-container>\\n\\n  </div>\\n</div>\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductRegistrationService } from 'src/app/service/product-registration.service';\nimport { Location } from '@angular/common';\nimport { ISubscription } from \"rxjs/Subscription\";\nimport { DataService } from 'src/app/service/data.service';\n\n@Component({\n  selector: 'app-add-configuration',\n  templateUrl: './add-configuration.component.html'\n})\nexport class AddConfigurationComponent implements OnInit {\n\n  PageTitle = \"Product Registrtion\"\n  loadingState = false;\n  addForm: FormGroup;\n  addWithForm: FormGroup;\n  addWithOutForm: FormGroup;\n  addBulkForm: FormGroup;\n  productListArray: Array<any> = [];\n  orderListArray: Array<any> = [];\n\n  showLoader = false;\n  formErrors = {\n    apierror: null,\n    qty: null\n  };\n  private subscription: ISubscription;\n  isEditing = false;\n  editId = null;\n  OrderId: string;\n  OrderId_show: boolean = true;\n  isSerialShow = false;\n  OrderDetails: any;\n  registrationTypeArray: any = [];\n  serialArray: any = [];\n  formtype = 1;\n  registrationTypeText: string;\n  maintainSerialNoText: string;\n  productText:string;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private location: Location,\n    private dataService: DataService,\n    private productRegistrationService: ProductRegistrationService,\n  ) {\n\n    // console.log(\"location.path() ==>\", location.path());\n\n    this.addForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      maintain_serial_no: [null],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n    });\n\n    this.addWithForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      maintain_serial_no: [null],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n      barcode: [null, Validators.compose([Validators.required])],\n      serial_no: [null, Validators.compose([Validators.required])],\n      tag_id: [null, Validators.compose([Validators.required])],\n      qty: [1, Validators.compose([Validators.required])],\n      sku_no: [null],\n      unload_id: [null],\n      unload_detail_id: [null],\n      received_qty: [null]\n    });\n\n    this.addWithOutForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      maintain_serial_no: [null],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n      barcode: [null, Validators.compose([Validators.required])],\n      tag_id: [null, Validators.compose([Validators.required])],\n      qty: [1, Validators.compose([Validators.required])],\n      sku_no: [null],\n      unload_id: [null],\n      unload_detail_id: [null],\n      received_qty: [null]\n    });\n\n    this.addBulkForm = this.fb.group({\n      order_id: [null, Validators.compose([Validators.required])],\n      product_id: [null, Validators.compose([Validators.required])],\n      registration_type: [null, Validators.compose([Validators.required])],\n      tag_id: [null, Validators.compose([Validators.required])],\n      qty: [null, Validators.compose([Validators.required])],\n      sku_no: [null],\n      unload_id: [null],\n      unload_detail_id: [null],\n      received_qty: [null]\n    });\n\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\n      if (location.path() == `/inbound/registeration/add-config/${id}`) {\n        this.OrderId = id;\n        this.addForm.patchValue({ order_id: this.OrderId });\n        this.OrderId_show = false;\n        this.getOrderDetails();\n      } else {\n        this.editId = id;\n        this.isEditing = true;\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEditing) {\n      this.getEditObject()\n    } else { this.getMasterData(); }\n  }\n\n  getMasterData(event = null) {\n    event ? this.addForm.patchValue({ product_id: '' }) : '';\n    const params: any = {};\n    if (this.addForm.value.order_id) {\n      params.order_id = this.addForm.value.order_id;\n    }\n    if (this.isEditing) {\n      params.is_editing = this.isEditing;\n    }\n    this.productRegistrationService.getMasterData(params).subscribe((response) => {\n      if (response.success) {\n        if (this.addForm.value.order_id) {\n          if (this.isEditing) {\n            this.orderListArray = response.data.order;\n            this.productListArray = response.data.product;\n          } else {\n            this.registrationTypeArray = response.data.registration_type;\n            this.serialArray = response.data.serial;\n            this.productListArray = response.data.product;\n          }\n        } else {\n          this.orderListArray = response.data.order;\n        }\n      }\n    });\n  }\n\n\n  getEditObject() {\n    this.productRegistrationService.getProductConfigurationById(this.editId).subscribe((response) => {\n      if (response.success) {\n        this.addForm.patchValue(response.data);\n        this.addForm.patchValue({\n          registration_type: response.data.unload_detail.registration_type,\n          maintain_serial_no: response.data.unload_detail.maintain_serial_no,\n          product_id: response.data.product.value,\n          order_id: response.data.order.value\n        });\n        this.orderListArray = [response.data.order];\n        this.productListArray = [response.data.product];\n      } else {\n        // this.router.navigateByUrl('/inbound/registeration');\n      }\n    });\n  }\n\n  setProductDetail(data) {\n    if (data) {\n      console.log(data);\n      \n      // console.log(this.productListArray[this.addForm.value.product_id]);\n    \n    this.productText=data.label;\n      this.addWithForm.patchValue({\n        sku_no: data.sku_no,\n        product_id: data.value,\n        unload_id: data.unload_id,\n        unload_detail_id: data.unload_detail_id,\n        received_qty: data.received_qty\n      });\n      this.addWithOutForm.patchValue({\n        sku_no: data.sku_no,\n        product_id: data.value,\n        unload_id: data.unload_id,\n        unload_detail_id: data.unload_detail_id,\n        received_qty: data.received_qty\n      });\n      this.addBulkForm.patchValue({\n        sku_no: data.sku_no,\n        product_id: data.value,\n        unload_id: data.unload_id,\n        unload_detail_id: data.unload_detail_id,\n        received_qty: data.received_qty\n      });\n    }\n  }\n\n  qunatitycheck() {\n    let qty = Number(this.addBulkForm.value.qty);\n    let r_qty = Number(this.addBulkForm.value.received_qty);\n    if (qty <= r_qty) {\n      this.formErrors.qty = null;\n      this.addBulkForm.controls['qty'].setErrors(null);\n    }else{\n      this.formErrors.qty = \"* Please Enter equval or small value in Received Qunatity\";\n      this.addBulkForm.controls['qty'].setErrors({'incorrect': true});\n    }\n\n  }\n\n\n  submitForm(formData: any): void {\n    if (formData.valid) {\n      this.showLoader = true;\n      const data = new FormData();\n      data.append('registration_type', formData.value.registration_type);\n      data.append('order_id', formData.value.order_id);\n      data.append('product_id', formData.value.product_id);\n      if (this.isSerialShow) { data.append('maintain_serial_no', formData.value.maintain_serial_no); }\n      if (this.isEditing) {\n        this.productRegistrationService.editProductConfiguration(this.editId, data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.next();\n            // this.router.navigateByUrl('/inbound/registeration');\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      } else {\n        this.productRegistrationService.addProductConfiguration(data).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.next();\n            // this.router.navigateByUrl('/inbound/registeration');\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      }\n    }\n  }\n\n  back() {\n    this.location.back();\n  }\n  next() {\n    \n    if (this.addForm.value.registration_type == 0) {\n      this.registrationTypeText = this.registrationTypeArray[0].label;\n\n      if (this.addForm.value.maintain_serial_no == 0) {\n        this.maintainSerialNoText = this.serialArray[0].label;\n        this.formtype = 2;\n\n        this.addWithForm.patchValue({\n          registration_type: this.registrationTypeArray[0].value,\n          order_id: this.addForm.value.order_id,\n          maintain_serial_no: this.addForm.value.maintain_serial_no\n        })\n\n      } else {\n        this.maintainSerialNoText = this.serialArray[0].label;\n        this.formtype = 3;\n\n        this.addWithOutForm.patchValue({\n          registration_type: this.registrationTypeArray[0].value,\n          order_id: this.addForm.value.order_id,\n          maintain_serial_no: this.addForm.value.maintain_serial_no\n        })\n\n      }\n\n    } else {\n      this.formtype = 4;\n      this.addBulkForm.patchValue({\n        registration_type: this.registrationTypeArray[1].value,\n        order_id: this.addForm.value.order_id,\n        maintain_serial_no: this.addForm.value.maintain_serial_no\n      })\n      this.registrationTypeText = this.registrationTypeArray[1].label;\n    }\n  }\n\n  typeChange() {\n    if (this.addForm.value.registration_type == 0) {\n      this.isSerialShow = true;\n      this.addForm.get('maintain_serial_no').setValidators(Validators.compose([Validators.required]));\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    } else {\n      this.isSerialShow = false;\n      this.addForm.get('maintain_serial_no').clearValidators();\n      this.addForm.get('maintain_serial_no').updateValueAndValidity();\n    }\n  }\n\n  getOrderDetails() {\n    this.subscription = this.dataService.OrderDetails.subscribe((data) => {\n      if (data) {\n        this.OrderDetails = data;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n\n  // Product Registration\n\n  submitPForm(formData: any): void {\n    console.log(formData);\n\n    if (formData.valid) {\n      this.showLoader = true;\n      if (this.isEditing) {\n        this.productRegistrationService.editProductRegistration(this.editId, formData.value).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      } else {\n        this.productRegistrationService.addProductRegistration(formData.value).subscribe((response) => {\n          this.showLoader = false;\n          if (response.success) {\n            this.back();\n          }\n        }, (error) => {\n          this.showLoader = false;\n        });\n      }\n    }\n  }\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddConfigurationComponent } from './add-configuration.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ProductRegistrationService } from 'src/app/service/product-registration.service';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddConfigurationComponent\n  },\n  {\n    path: ':id',\n    component: AddConfigurationComponent\n  }\n]\n\n@NgModule({\n  declarations: [AddConfigurationComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormValidationModule,\n    NgSelectModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ], providers: [ProductRegistrationService]\n})\n\nexport class AddConfigurationModule { }\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n"]}
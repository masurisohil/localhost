{"version":3,"sources":["webpack:///src/app/pages/inbound/registeration/add-registeration/add-registeration.component.html","webpack:///src/app/shared/form-validation/control-error/control-error.component.html","webpack:///src/app/pages/inbound/registeration/add-registeration/add-registeration.component.ts","webpack:///src/app/pages/inbound/registeration/add-registeration/add-registeration.module.ts","webpack:///src/app/shared/form-validation/control-error/control-error.component.ts","webpack:///src/app/shared/form-validation/directive/control-error-container.directive.ts","webpack:///src/app/shared/form-validation/directive/control-errors.directive.ts","webpack:///src/app/shared/form-validation/directive/form-submit.directive.ts","webpack:///src/app/shared/form-validation/form-errors.ts","webpack:///src/app/shared/form-validation/form-validation.module.ts"],"names":["AddRegisterationComponent","router","activatedRoute","fb","location","dataService","productRegistrationService","PageTitle","addNewRadio","loadingState","productListArray","orderListArray","showLoader","formErrors","apierror","qty","isEditing","editId","OrderId_show","addForm","group","order_id","compose","required","tag_id","serial_no","barcode","received_qty","product_id","sku_no","unload_id","unload_detail_id","snapshot","paramMap","get","id","path","OrderId","patchValue","getOrderDetails","getEditObject","getMasterData","event","params","value","is_editing","subscribe","response","success","data","order","product","getProductRegistrationById","unload_detail","Number","r_qty","controls","setErrors","formData","valid","editProductRegistration","back","error","addProductRegistration","subscription","OrderDetails","unsubscribe","selector","template","routes","component","AddRegisterationModule","declarations","imports","forChild","providers","ControlErrorComponent","cdr","_hide","_text","detectChanges","changeDetection","OnPush","ControlErrorContainerDirective","vcr","ControlErrorsDirective","resolver","controlErrorContainer","form","controlDir","customErrors","container","submit$","control","valueChanges","v","controlErrors","errors","control_name","getFormControlName","firstKey","Object","keys","messages","undefined","setError","ref","c","formGroup","parent","find","name","text","factory","resolveComponentFactory","createComponent","instance","FormSubmitDirective","host","element","pipe","classList","contains","add","nativeElement","VALIDATION_MESSAGES","first_name","last_name","email","validateEmail","phone_number","minlength","maxlength","password","pattern","confirm_password","validatePassword","login_pin","number_tag_to_create","max","min","FormValidationModule","exports","entryComponents"],"mappings":"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","file":"add-registeration-add-registeration-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header border-b\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"mr-auto\\\">{{ isEditing ? 'Update' : 'Create' }} {{PageTitle}}</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"submitForm(addForm)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Order Id</label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n\\r\\n              <ng-container *ngIf=\\\"OrderId_show; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n              <ng-template #thenTemplate>\\r\\n                <ng-select [formControl]=\\\"addForm.controls['order_id']\\\" (change)=\\\"getMasterData(true)\\\"\\r\\n                  [items]=\\\"orderListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Order\\\">\\r\\n                </ng-select>\\r\\n              </ng-template>\\r\\n              <ng-template #elseTemplate>\\r\\n                <select disabled class=\\\"form-control\\\">\\r\\n                  <option default selected=\\\"true\\\" disabled hidden value=\\\"OrderDetails?.po_no\\\">{{OrderDetails?.po_no}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Product <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <ng-select [formControl]=\\\"addForm.controls['product_id']\\\" (change)=\\\"setProductDetail($event)\\\"\\r\\n                [items]=\\\"productListArray\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Product\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Serial Number <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <input [formControl]=\\\"addForm.controls['serial_no']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Tag ID <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <input [formControl]=\\\"addForm.controls['tag_id']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Received Qunatity </label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <input number [formControl]=\\\"addForm.controls['received_qty']\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly placeholder=\\\"\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Qunatity <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\" [ngClass]=\\\"{'has-error': formErrors.qty}\\\">\\r\\n              <input number [formControl]=\\\"addForm.controls['qty']\\\" (input)=\\\"qunatitycheck()\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"formErrors.qty\\\" class=\\\"help-block\\\"\\r\\n            [innerHTML]=\\\"formErrors.qty\\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label text-md-right col-md-4 col-lg-3\\\">Bar Code <em>*</em></label>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <input [formControl]=\\\"addForm.controls['barcode']\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right border-top py-4 mt-5 card-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-2\\\">Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<p class=\\\"help is-danger\\\" [class.hide]=\\\"_hide\\\" [innerHTML]=\\\"_text\\\"></p>\"","\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductRegistrationService } from 'src/app/service/product-registration.service';\r\nimport { Location } from '@angular/common';\r\nimport { ISubscription } from \"rxjs/Subscription\";\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-add-registeration',\r\n  templateUrl: './add-registeration.component.html'\r\n})\r\nexport class AddRegisterationComponent implements OnInit {\r\n\r\n  PageTitle = \"Product Registration\"\r\n  addNewRadio: boolean = false\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n  productListArray: Array<any> = [];\r\n  orderListArray: Array<any> = [];\r\n  showLoader = false;\r\n  formErrors = {\r\n    apierror: null,\r\n    qty: null\r\n  };\r\n  private subscription: ISubscription;\r\n  isEditing = false;\r\n  editId = null;\r\n  OrderId: string;\r\n  OrderId_show: boolean = true;\r\n  OrderDetails: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private location: Location,\r\n    private dataService: DataService,\r\n    private productRegistrationService: ProductRegistrationService,\r\n  ) {\r\n\r\n    // console.log(\"location.path() ==>\", location.path());\r\n\r\n    this.addForm = this.fb.group({\r\n      order_id: [null, Validators.compose([Validators.required])],\r\n      tag_id: [null, Validators.compose([Validators.required])],\r\n      serial_no: [null, Validators.compose([Validators.required])],\r\n      barcode: [null, Validators.compose([Validators.required])],\r\n      received_qty: [null, Validators.compose([Validators.required])],\r\n      qty: [null, Validators.compose([Validators.required])],\r\n      product_id: [null, Validators.compose([Validators.required])],\r\n      sku_no: [null],\r\n      unload_id: [null],\r\n      unload_detail_id: [null],\r\n    });\r\n\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      let id = this.activatedRoute.snapshot.paramMap.get('id');\r\n      if (location.path() == `/inbound/registeration/add/${id}`) {\r\n        this.OrderId = id;\r\n        this.addForm.patchValue({ order_id: this.OrderId });\r\n        this.OrderId_show = false;\r\n        this.getOrderDetails();\r\n      } else {\r\n        this.editId = id;\r\n        this.isEditing = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isEditing) {\r\n      this.getEditObject()\r\n    } else { this.getMasterData(); }\r\n  }\r\n\r\n  getMasterData(event = null) {\r\n    event ? this.addForm.patchValue({ product_id: '' }) : '';\r\n    const params: any = {};\r\n    if (this.addForm.value.order_id) {\r\n      params.order_id = this.addForm.value.order_id;\r\n    }\r\n    if (this.isEditing) {\r\n      params.is_editing = this.isEditing;\r\n    }\r\n    this.productRegistrationService.getMasterData(params).subscribe((response) => {\r\n      if (response.success) {\r\n        if (this.addForm.value.order_id) {\r\n          if (this.isEditing) {\r\n            this.orderListArray = response.data.order;\r\n            this.productListArray = response.data.product;\r\n          } else {\r\n            this.productListArray = response.data.product;\r\n          }\r\n        } else {\r\n          this.orderListArray = response.data.order;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getEditObject() {\r\n    this.productRegistrationService.getProductRegistrationById(this.editId).subscribe((response) => {\r\n      if (response.success) {\r\n        this.addForm.patchValue(response.data);\r\n        this.addForm.patchValue({\r\n          received_qty:response.data.unload_detail.received_qty,\r\n          unload_detail_id:response.data.unload_detail.unload_detail_id,\r\n          product_id:response.data.product.value,\r\n          order_id:response.data.order.value\r\n        });\r\n        this.orderListArray = [response.data.order];\r\n        this.productListArray = [response.data.product];\r\n    \r\n        \r\n        // this.getMasterData();\r\n      } else {\r\n        // this.router.navigateByUrl('/inbound/registeration');\r\n      }\r\n    });\r\n  }\r\n\r\n  setProductDetail(data) {\r\n    if (data) {\r\n      this.addForm.patchValue({\r\n        sku_no: data.sku_no,\r\n        unload_id: data.unload_id,\r\n        unload_detail_id: data.unload_detail_id,\r\n        received_qty: data.received_qty\r\n      });\r\n    }\r\n  }\r\n\r\n  qunatitycheck() {\r\n    let qty = Number(this.addForm.value.qty);\r\n    let r_qty = Number(this.addForm.value.received_qty);\r\n    if (qty <= r_qty) {\r\n      this.formErrors.qty = null;\r\n      this.addForm.controls['qty'].setErrors(null);\r\n    }else{\r\n      this.formErrors.qty = \"* Please Enter equval or small value in Received Qunatity\";\r\n      this.addForm.controls['qty'].setErrors({'incorrect': true});\r\n    }\r\n\r\n  }\r\n\r\n  submitForm(formData: any): void {\r\n    if (formData.valid) {\r\n      this.showLoader = true;\r\n      if (this.isEditing) {\r\n        this.productRegistrationService.editProductRegistration(this.editId, formData.value).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            this.back();\r\n            // this.router.navigateByUrl('/inbound/registeration');\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      } else {\r\n        this.productRegistrationService.addProductRegistration(formData.value).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.success) {\r\n            this.back();\r\n            // this.router.navigateByUrl('/inbound/registeration');\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  getOrderDetails() {\r\n    this.subscription = this.dataService.OrderDetails.subscribe((data) => {\r\n      if (data) {\r\n        this.OrderDetails = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddRegisterationComponent } from './add-registeration.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ProductRegistrationService } from 'src/app/service/product-registration.service';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddRegisterationComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: AddRegisterationComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [AddRegisterationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ], providers: [ProductRegistrationService]\r\n})\r\nexport class AddRegisterationModule { }\r\n\r\n\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ControlErrorComponent implements OnInit {\r\n\r\n  _text;\r\n  _hide = true;\r\n\r\n  @Input() set text(value) {\r\n    if (value !== this._text) {\r\n      this._text = value;\r\n      this._hide = !value;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[controlErrorContainer]'\r\n})\r\nexport class ControlErrorContainerDirective {\r\n\r\n  constructor(public vcr: ViewContainerRef) { }\r\n\r\n}\r\n","import {\r\n  Directive, Optional, ViewContainerRef, ComponentFactoryResolver,\r\n  ComponentRef, Input, Host, OnInit, OnDestroy\r\n} from '@angular/core';\r\nimport { NgControl, AbstractControl } from '@angular/forms';\r\nimport { ControlErrorComponent } from '../control-error/control-error.component';\r\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\r\nimport { FormSubmitDirective } from './form-submit.directive';\r\nimport { merge, EMPTY, Observable } from 'rxjs';\r\nimport { VALIDATION_MESSAGES } from '../form-errors';\r\n\r\n\r\n@Directive({\r\n  selector: '[formControl], [formControlName]'\r\n})\r\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\r\n\r\n  ref: ComponentRef<ControlErrorComponent>;\r\n  container: ViewContainerRef;\r\n  submit$: Observable<Event>;\r\n  @Input() customErrors = {};\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\r\n    @Optional() @Host() private form: FormSubmitDirective,\r\n    private controlDir: NgControl) {\r\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\r\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control && this.control.valueChanges) {\r\n      merge(\r\n        this.control.valueChanges,\r\n        this.submit$\r\n      ).subscribe((v) => {\r\n        const controlErrors = this.control.errors;\r\n        if (controlErrors) {\r\n          const control_name = this.getFormControlName(this.control);\r\n          // console.log(control_name, controlErrors);\r\n          const firstKey = Object.keys(controlErrors)[0];\r\n          const messages = VALIDATION_MESSAGES[control_name];\r\n          if (messages !== undefined && messages !== null && messages !== '') {\r\n            this.setError(messages[firstKey]);\r\n          }\r\n        } else if (this.ref) {\r\n          this.setError(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFormControlName(c: AbstractControl): string | null {\r\n    const formGroup = c.parent.controls;\r\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n  }\r\n\r\n  get control() {\r\n    return this.controlDir.control;\r\n  }\r\n\r\n  setError(text: string) {\r\n    if (!this.ref) {\r\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\r\n      this.ref = this.container.createComponent(factory);\r\n    }\r\n\r\n    this.ref.instance.text = text;\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: 'form'\r\n})\r\nexport class FormSubmitDirective {\r\n\r\n  constructor(private host: ElementRef<HTMLFormElement>) { }\r\n\r\n  submit$ = fromEvent(this.element, 'submit').pipe(tap(() => {\r\n    if (this.element.classList.contains('submitted') === false) {\r\n      this.element.classList.add('submitted');\r\n    }\r\n  }), shareReplay(1));\r\n\r\n  get element() {\r\n    return this.host.nativeElement;\r\n  }\r\n\r\n}\r\n","export const VALIDATION_MESSAGES = {\r\n  first_name: {\r\n    required: `* Please enter first name`,\r\n  },\r\n  last_name: {\r\n    required: `* Please enter last name`,\r\n  },\r\n  email: {\r\n    required: `* Please enter email`,\r\n    email: `* Please enter valid email`,\r\n    validateEmail: `* Please enter valid email`,\r\n  },\r\n  phone_number: {\r\n    required: `Please enter phone number`,\r\n    minlength: `Please enter at least 8 digits`,\r\n    maxlength: `Please enter at least 18 digits`\r\n  },\r\n  password: {\r\n    required: `* Please enter password`,\r\n    pattern: `* Password must contains at least 6 characters`,\r\n  },\r\n  confirm_password: {\r\n    required: `* Please enter confirm password`,\r\n    validatePassword: `* Your Password is not matched`,\r\n  },\r\n\r\n \r\n  login_pin: {\r\n    required: `* Please enter PIN`,\r\n    maxlength: `Pin Max 4 Digit`,\r\n    minlength: `Please enter at least 4 digits`,\r\n  },\r\n \r\n  number_tag_to_create: {\r\n    required: `* Please enter vlaue`,\r\n    max: `Maximum 100`,\r\n    min:` Minimum 1`\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormSubmitDirective } from './directive/form-submit.directive';\r\nimport { ControlErrorsDirective } from './directive/control-errors.directive';\r\nimport { ControlErrorContainerDirective } from './directive/control-error-container.directive';\r\nimport { ControlErrorComponent } from './control-error/control-error.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  exports: [\r\n    ControlErrorComponent,\r\n    ControlErrorContainerDirective,\r\n    ControlErrorsDirective,\r\n    FormSubmitDirective\r\n  ],\r\n  entryComponents: [\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormValidationModule { }\r\n"]}